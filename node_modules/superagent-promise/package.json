{
  "name": "superagent-promise",
  "version": "1.0.3",
  "description": "superagent promise wrapper",
  "main": "index.js",
  "scripts": {
    "test": "mocha --ui tdd index_test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/lightsofapollo/superagent-promise.git"
  },
  "keywords": [
    "superagent",
    "promise",
    "http"
  ],
  "author": {
    "name": "James Lal [:lightsofapollo]"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/lightsofapollo/superagent-promise/issues"
  },
  "devDependencies": {
    "browser-test": "0.0.0-alpha.2",
    "chai": "^2.3.0",
    "component": "^1.1.0",
    "debug": "2.2.0",
    "es6-promise": "^2.1.1",
    "mocha": "^2.2.5",
    "node-static": "^0.7.6",
    "superagent": ">= 1.2.0"
  },
  "readme": "[![Build Status](https://img.shields.io/travis/lightsofapollo/superagent-promise/master.svg)](https://travis-ci.org/lightsofapollo/superagent-promise)\n\nsuperagent-promise\n==================\n\nSimple/dumb promise wrapper for superagent. You must depend on `superagent` and your favorite Promise library directly.\n\n\n## Usage\n\n```js\nvar Promise = this.Promise || require('promise');\nvar agent = require('superagent-promise')(require('superagent'), Promise);\n\n// method, url form with `end`\nagent('GET', 'http://google.com')\n  .end()\n  .then(function onResult(res) {\n    // do stuff\n  });\n\n// method, url form with `then`\nagent('GET', 'http://google.com')\n  .then(function onResult(res) {\n    // do stuff\n  });\n\n\n// helper functions: options, head, get, post, put, patch, del\nagent.put('http://myxfoo', 'data')\n  .end()\n  .then(function(res) {\n    // do stuff`\n  });\n\n// helper functions: options, head, get, post, put, patch, del\nagent.put('http://myxfoo', 'data').\n  .then(function(res) {\n    // do stuff\n  });\n\n\n```\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/lightsofapollo/superagent-promise",
  "_id": "superagent-promise@1.0.3",
  "_from": "superagent-promise@>=1.0.3 <2.0.0"
}
