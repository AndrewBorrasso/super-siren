{"version":3,"sources":["lib/LinkedSubEntity.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;yBAAsB,WAAW;;;;sBACnB,QAAQ;;;;4BACG,gBAAgB;;;;;;;;;IAMnC,eAAe;WAAf,eAAe;;UAAf,eAAe;wBAAf,eAAe;;6BAAf,eAAe;;;cAAf,eAAe;;;;;;;;;;;SAcL,kBAAC,IAAI,EAAgB;OAAd,OAAO,yDAAC,IAAI;;AACjC,OAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,oBAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;AAC/D,UAAM,IAAI,KAAK,CAAC,6EAA6E,CAAC,CAAC;IAC/F;;AAED,OAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACf,UAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;IAC9D;;AAED,UAAO,KAAK,CAAC,aAAa,CAAC,UAAA,GAAG,EAAI;AACjC,OAAG,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,uBAAU,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7C,OAAG,CAAC,GAAG,CAAC,MAAM,EAAE,0BAAa,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;AACzE,OAAG,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,uBAAU,GAAG,CAAC,IAAI,SAAM,IAAI,EAAE,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC;GACH;;;;;;;;OAMe,eAAG;AAClB,UAAO,KAAK,CAAC;GACb;;;QApCI,eAAe;GAAS,uBAAU,MAAM,CAAC;AAC9C,KAAI,EAAE,IAAI,uBAAU,GAAG,EAAE;AACzB,QAAO,EAAE,IAAI,uBAAU,GAAG,EAAE;AAC5B,KAAI,EAAE,IAAI;CACV,CAAC;;AAmCF,IAAM,KAAK,GAAG,IAAI,eAAe,EAAE,CAAC;;qBAErB,eAAe","file":"lib/LinkedSubEntity.js","sourcesContent":["import Immutable from 'immutable';\nimport _ from 'lodash';\nimport SirenHelpers from './SirenHelpers';\n\n/**\n * Represents an sub-entity of an entity which is represented\n * as a URL to the actual entity instance.\n */\nclass LinkedSubEntity extends Immutable.Record({\n\trels: new Immutable.Set(),\n\tclasses: new Immutable.Set(),\n\thref: null\n}) {\n\n\t/**\n\t * Parses the provided json instance and returns\n\t * the LinkedSubEntity representation of that json\n\t *\n\t * @param  {Object} json Object representation of the linked sub-entity\n\t * @param  {String} [baseUrl=null] Optional baseUrl to use if the href is a relative URL\n\t * @return {LinkedSubEntity}      Parsed representation of the linked sub-entity.\n\t */\n\tstatic fromJson(json, baseUrl=null) {\n\t\tif (!json.rel || !_.isArray(json.rel) || json.rel.length === 0) {\n\t\t\tthrow new Error('A rel array with at least one rel is required to create a linked sub entity');\n\t\t}\n\n\t\tif (!json.href) {\n\t\t\tthrow new Error('a href is required for a linked sub entity');\n\t\t}\n\n\t\treturn empty.withMutations(map => {\n\t\t\tmap.set('rels', new Immutable.Set(json.rel));\n\t\t\tmap.set('href', SirenHelpers.processUrl(json.href || map.href, baseUrl));\n\t\t\tmap.set('classes', new Immutable.Set(json.class || []));\n\t\t});\n\t}\n\n\t/**\n\t * Default empty instance of a LinkedSubEntity\n\t * @return {LinkedSubEntity} Default empty state\n\t */\n\tstatic get empty() {\n\t\treturn empty;\n\t}\n}\n\nconst empty = new LinkedSubEntity();\n\nexport default LinkedSubEntity;\n"],"sourceRoot":"/source/"}