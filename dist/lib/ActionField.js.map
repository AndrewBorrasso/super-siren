{"version":3,"sources":["lib/ActionField.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;yBAAsB,WAAW;;;;;;;;;;;;;;IAW3B,WAAW;WAAX,WAAW;;UAAX,WAAW;wBAAX,WAAW;;6BAAX,WAAW;;;cAAX,WAAW;;;;;;;;;SAYD,kBAAC,IAAI,EAAE;AACrB,OAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACf,UAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;IACvD;;AAED,UAAO,KAAK,CAAC,aAAa,CAAC,UAAA,GAAG,EAAI;AACjC,OAAG,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AACvC,OAAG,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC;AAC1C,OAAG,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AACvC,OAAG,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC,CAAC;GACH;;;;;;;;;OAOe,eAAG;AAClB,UAAO,KAAK,CAAC;GACb;;;QAhCI,WAAW;GAAS,uBAAU,MAAM,CAAC;AAC1C,KAAI,EAAE,EAAE;AACR,MAAK,EAAE,IAAI;AACX,KAAI,EAAE,MAAM;AACZ,MAAK,EAAE,IAAI;CACX,CAAC;;AA8BF,IAAM,KAAK,GAAG,IAAI,WAAW,EAAE,CAAC;;qBAEjB,WAAW","file":"lib/ActionField.js","sourcesContent":["import Immutable from 'immutable';\n\n/**\n * Describes a field on an Action and how this field\n * should be sent to Siren API as part of that Action.\n *\n * @param {String} options.name:  ''     [description]\n * @param {String} options.title: null   [description]\n * @param {String} options.type:  'text' [description]\n * @param {Object} options.value: null   Default value to be sent on the field\n */\nclass ActionField extends Immutable.Record({\n\tname: '',\n\ttitle: null,\n\ttype: 'text',\n\tvalue: null\n}) {\n\t/**\n\t * Parses a JSON representation of a field.\n\t *\n\t * @param {Object} json The Object representation of the ActionField.\n\t * @return {ActionField} parsed structure which represents a field on an action.\n\t */\n\tstatic fromJson(json) {\n\t\tif (!json.name) {\n\t\t\tthrow new Error('name is required on an action field');\n\t\t}\n\n\t\treturn empty.withMutations(map => {\n\t\t\tmap.set('name', json.name || map.name);\n\t\t\tmap.set('title', json.title || map.title);\n\t\t\tmap.set('type', json.type || map.type);\n\t\t\tmap.set('value', json.value || map.value);\n\t\t});\n\t}\n\n\t/**\n\t * Default empty state for a field.\n\t *\n\t * @return {ActionField} Default state\n\t */\n\tstatic get empty() {\n\t\treturn empty;\n\t}\n}\n\nconst empty = new ActionField();\n\nexport default ActionField;\n"],"sourceRoot":"/source/"}